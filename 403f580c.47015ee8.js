(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{152:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var r=a(2),n=a(9),i=(a(0),a(193)),o={id:"future",title:"Future",sidebar_label:"Future"},l={id:"code_doc/future",title:"Future",description:"As great of a jump V3 was from V2 there are always things that can be improved or experimented with for V4.",source:"@site/docs/code_doc/future.md",permalink:"/Coastal-Image-Labeler/docs/code_doc/future",editUrl:"https://github.com/UNCG-DAISY/Coastal-Image-Labeler/edit/master/docs/docs/code_doc/future.md",sidebar_label:"Future",sidebar:"docs",previous:{title:"Tools",permalink:"/Coastal-Image-Labeler/docs/code_doc/tools"},next:{title:"Question Set Documentation",permalink:"/Coastal-Image-Labeler/docs/question_sets/overview"}},s=[{value:"CMS",id:"cms",children:[]},{value:"Monorepo",id:"monorepo",children:[]},{value:"CLI",id:"cli",children:[]},{value:"Frontend",id:"frontend",children:[]},{value:"Server",id:"server",children:[]},{value:"Improve data/resource sharing between CLI and dashboard",id:"improve-dataresource-sharing-between-cli-and-dashboard",children:[]},{value:"GitHub Actions",id:"github-actions",children:[]},{value:"VM",id:"vm",children:[]},{value:"TypeScript",id:"typescript",children:[]},{value:"Experimental",id:"experimental",children:[]}],c={rightToc:s};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"As great of a jump V3 was from V2 there are always things that can be improved or experimented with for V4."),Object(i.b)("h2",{id:"cms"},"CMS"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Alot of the current features and ideas below could be done using a Content Management System. This would come from ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://strapi.io/"}),"Strapi")," which is an open source headless CMS.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Some of the features are",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Image resize on upload"),Object(i.b)("li",{parentName:"ul"},"public or authenticated required routes/rules"),Object(i.b)("li",{parentName:"ul"},"possible integration with Auth0 ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/Heziode/strapi-auth0-example"}),"here"),"."),Object(i.b)("li",{parentName:"ul"},"Admin dashboard"),Object(i.b)("li",{parentName:"ul"},"Provides login system")))))),Object(i.b)("h2",{id:"monorepo"},"Monorepo"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"One source of potential issues is the duplicated Type interfaces across the CLI, frontend, and backend. Using something like ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://nx.dev/"}),"Nx")," from NRWL and having a Monorepo could help prevent potential issues and allow for future scalability.")),Object(i.b)("h2",{id:"cli"},"CLI"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"CLI subcommand called ",Object(i.b)("inlineCode",{parentName:"li"},"doctor"),"(name sounds cool to me) that would help find errors in the DB (Such as an archive refers to a catalog that doesnt exist or an image refers to an archive that doesnt exist, image counts being wrong, or tags missing data)."),Object(i.b)("li",{parentName:"ul"},"Unit Testing for CLI."),Object(i.b)("li",{parentName:"ul"},"Multithreading?")),Object(i.b)("h2",{id:"frontend"},"Frontend"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Unit Testing for frontend on some of the parts that are deterministic."),Object(i.b)("li",{parentName:"ul"},"Pixel annotation with ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/UniversalDataTool/react-image-annotate"}),"React Image Annotate"),"."),Object(i.b)("li",{parentName:"ul"},"Add sliders as a possible question type."),Object(i.b)("li",{parentName:"ul"},"Add number field as a possible question type."),Object(i.b)("li",{parentName:"ul"},"Improve the way question sets are stored. Add ability to check/create new question sets in admin page."),Object(i.b)("li",{parentName:"ul"},"Admin page to show latest tags, update users, and other adminy stuff \ud83e\udd37 ",Object(i.b)("inlineCode",{parentName:"li"},"\xaf\\_(\u30c4)_/\xaf")," ."),Object(i.b)("li",{parentName:"ul"},"Can be partially implemented using a CMS")),Object(i.b)("h2",{id:"server"},"Server"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Simplify some of the middlewares. Some are a little bit messy in terms of logic."),Object(i.b)("li",{parentName:"ul"},"Auto inser user db data via express"),Object(i.b)("li",{parentName:"ul"},"Enforce user tag role checks on server rather then on the nextjs server from ",Object(i.b)("inlineCode",{parentName:"li"},"getServerSideProps"),"."),Object(i.b)("li",{parentName:"ul"},"Can be partially implemented using a CMS")),Object(i.b)("h2",{id:"improve-dataresource-sharing-between-cli-and-dashboard"},"Improve data/resource sharing between CLI and dashboard"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"One issue noted was there was duplicate code in the CLI and dashboard."),Object(i.b)("li",{parentName:"ul"},"There should be a way to make it so they share the code (other then using symlinks, which is not sustainable as what happens if someone forgets to add the symlink)"),Object(i.b)("li",{parentName:"ul"},"Can be solved with using a Monorepo setup.")),Object(i.b)("h2",{id:"github-actions"},"GitHub Actions"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Create file for unit testing configs, such as user data and archives that will be used through out the test to unsure none of the tests step on each other."),Object(i.b)("li",{parentName:"ul"},"Auto deploy site whenever master get pushed to."),Object(i.b)("li",{parentName:"ul"},"Auto deploy dev site whenever beta gets pushed to.")),Object(i.b)("h2",{id:"vm"},"VM"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Stream log files to other locations."),Object(i.b)("li",{parentName:"ul"},"Notify if the site goes down or if an error happens.")),Object(i.b)("h2",{id:"typescript"},"TypeScript"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Improve the way types are shared across the dashboard and CLI."),Object(i.b)("li",{parentName:"ul"},"Can be used by setting up a Monorepo")),Object(i.b)("h2",{id:"experimental"},"Experimental"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Make the DB be local instance instead of MongoDB Atlas.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Would probably mean that users would have to make a local account and ",Object(i.b)("strong",{parentName:"li"},"CAN NOT")," signin with Google/Facebook/Github/etc."))),Object(i.b)("li",{parentName:"ul"},"Use a SQL database and maybe use Redis for caching/session management/message passing.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"CMS might be able to help with this"))),Object(i.b)("li",{parentName:"ul"},"Dockerize."),Object(i.b)("li",{parentName:"ul"},"Kubernetes."),Object(i.b)("li",{parentName:"ul"},"Dark theme \ud83c\udf11 and Light theme \u2600\ufe0f or maybe other themes/user themes."),Object(i.b)("li",{parentName:"ul"},"Redux for state management. (Maybe)"),Object(i.b)("li",{parentName:"ul"},"Progressive image loading. (More or less done now)"),Object(i.b)("li",{parentName:"ul"},"Archives within archives with in archives....etc.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Images can have groups assigned to them (like tags on discord). So a image could have the ",Object(i.b)("inlineCode",{parentName:"li"},"Florence")," group and ",Object(i.b)("inlineCode",{parentName:"li"},"FlorenceArchive")," group."),Object(i.b)("li",{parentName:"ul"},"A user would need to have (atleast one or all, which ever idea works out best) inorder to tag an image. The group can have a rank (1,2,3,4...) and so images would be grouped by the rank 1 groups first then rank 2 and so on."),Object(i.b)("li",{parentName:"ul"},"Only one group per rank for an image (cant have say 2 rank 3 group labels).")))))}b.isMDXComponent=!0},193:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=n.a.createContext({}),b=function(e){var t=n.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=b(e.components);return n.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},p=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=b(a),p=r,m=u["".concat(o,".").concat(p)]||u[p]||d[p]||i;return a?n.a.createElement(m,l(l({ref:t},c),{},{components:a})):n.a.createElement(m,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);